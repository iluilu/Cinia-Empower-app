<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>change_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="change_task">correlation_id=EMPOWER^planned_start_dateVALCHANGES^ORplanned_end_dateVALCHANGES^EQ<item endquery="false" field="correlation_id" goto="false" newquery="false" operator="=" or="false" value="EMPOWER"/>
            <item endquery="false" field="planned_start_date" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="planned_end_date" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Empower work order integration SLAMuutos</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	function convertDate(dt) {
          //gs.print(dt);
          var aika = new GlideDateTime(dt);
          var newAika = aika.getDisplayValueInternal();
          var dateArr = newAika.split(' ');
          var newDate = dateArr[0] + "T" + dateArr[1];
          return newDate;
        }
	
    var payload = {
        "messageid": "",
        "order.profileid": "SLAMuutos",
        "order.id": current.number.toString(),
		"order.projectid": current.change_request.service_offering.u_project_id.toString(),
		"order.costcenternumber": current.change_request.service_offering.u_cost_center_number.toString(),
        "order.updatedissuedatetime": convertDate(current.sys_updated_on.toString()),
		"order.delivery.requesteddeliveryperiod.startdate": convertDate(current.planned_start_date.toString()),
        "order.delivery.requesteddeliveryperiod.enddate": convertDate(current.planned_end_date.toString()),
        "order.worknotes": current.u_ext_work_notes.getJournalEntry(1)
    };
   
    
    gs.info("Empower integration :: Payload: " + JSON.stringify(payload), 'EMPOWER-INTEGRATION');

    try {
        var r = new sn_ws.RESTMessageV2('x_cgo_empower_work.Empower work order', 'dates');
        r.setStringParameterNoEscape('MessageID', payload["messageid"]);
        r.setStringParameterNoEscape('Order.ProfileID', payload["order.profileid"].toString());
        r.setStringParameterNoEscape('Order.ID', payload["order.id"]);
		r.setStringParameterNoEscape('Order.ProjectId', payload["order.projectid"]);
		r.setStringParameterNoEscape('Order.CostCenterNumber', payload["order.costcenternumber"]);
        r.setStringParameterNoEscape('Order.UpdatedIssueDateTime', payload["order.updatedissuedatetime"]);
		r.setStringParameterNoEscape('Order.Delivery.RequestedDeliveryPeriod.StartDate', payload["order.delivery.requesteddeliveryperiod.startdate"]);
        r.setStringParameterNoEscape('Order.Delivery.RequestedDeliveryPeriod.EndDate', payload["order.delivery.requesteddeliveryperiod.enddate"]);
        r.setStringParameterNoEscape('Order.WorkNotes', payload["order.worknotes"]);
       

        var response = r.executeAsync();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();
        gs.info("Enersense integration :: XML Payload, Update: " + r.getRequestBody());
    }
    catch (ex) {
        var message = ex.message;
        gs.info("Enersense integration :: REST Error: " + message, 'EMPOWER-INTEGRATION');

    }



})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>joni-verco</sys_created_by>
        <sys_created_on>2021-05-11 11:07:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e91f0cb1dbcc3410c70dde0cd3961970</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Empower work order integration SLAMuutos</sys_name>
        <sys_overrides/>
        <sys_package display_value="Empower work order" source="x_cgo_empower_work">ebd12ac41bf610d01ec2dd39cd4bcb82</sys_package>
        <sys_policy/>
        <sys_scope display_value="Empower work order">ebd12ac41bf610d01ec2dd39cd4bcb82</sys_scope>
        <sys_update_name>sys_script_e91f0cb1dbcc3410c70dde0cd3961970</sys_update_name>
        <sys_updated_by>joni-verco</sys_updated_by>
        <sys_updated_on>2021-05-11 11:11:10</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e91f0cb1dbcc3410c70dde0cd3961970"/>
</record_update>
